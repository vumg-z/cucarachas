// funcionalidad de click en la landing page


window.addEventListener('click', function () {
    window.location.assign("game.html");
});

window.addEventListener('touchend', function () {
    window.location.assign("game.html");
});

var svg;
var animationType; // Declare animationType globally


function spinRight() {
    svg.rotate(2, svg.bounds.center);
}

function spinLeft() {
    svg.rotate(-2, svg.bounds.center);
}

var bounceVelocity = 2;
var bounceAcceleration = .1; // Adjust this for faster or slower acceleration
var bounceDamping = 1; // Adjust damping to control the 'bounciness'

function bounce() {
    // If the SVG hits the top or bottom of the canvas, reverse its velocity and apply damping
    if (svg.position.y >= paper.view.bounds.height - svg.bounds.height / 2 || svg.position.y <= svg.bounds.height / 2) {
        bounceVelocity = -bounceVelocity * bounceDamping;
    }

    // Apply acceleration to the velocity
    bounceVelocity += bounceAcceleration;

    // Update the position based on the velocity
    svg.position.y += bounceVelocity;

    
}


function onFrame(event) {
    switch (animationType) {
        case 'spinRight':
            spinRight();
            break;
        case 'spinLeft':
            spinLeft();
            break;
        case 'bounce':
            bounce();
            break;
    }
}

document.addEventListener("DOMContentLoaded", function () {
    paper.install(window);
    paper.setup(document.getElementById('myCanvas'));

    // Your SVG content as a string
    var svgString = `<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
    width="50%" viewBox="0 0 736 816" enable-background="new 0 0 736 816" xml:space="preserve">
<path fill="#000000" opacity="1.000000" stroke="none" 
   d="
M373.545898,1.000000 
   C380.703186,11.181665 381.770081,23.147163 384.196198,34.580967 
   C388.500946,54.868275 390.067688,75.722847 396.908539,95.491882 
   C401.087555,107.568565 406.241608,111.175018 419.128448,111.020363 
   C423.943665,110.962570 427.442200,109.049393 429.321106,104.403389 
   C428.140045,101.966949 425.444336,102.026382 423.525330,100.879555 
   C418.048035,97.606255 416.088959,93.359489 417.846466,88.010582 
   C419.724091,82.296089 423.896149,79.824028 430.337738,80.797432 
   C432.128784,81.068085 433.981781,81.526123 435.587982,82.332939 
   C459.679321,94.434196 484.665497,104.894150 506.621033,120.932167 
   C508.495850,122.301682 510.529297,123.461975 512.531372,124.648071 
   C522.353271,130.466858 531.786377,129.340714 541.198181,123.397453 
   C550.234497,117.691307 557.321106,110.058495 563.897156,101.814926 
   C567.122559,97.771622 570.640198,94.030540 574.976379,91.081085 
   C584.039185,84.916565 593.914612,92.302483 595.958435,99.734360 
   C597.003479,103.534637 594.825745,106.481895 592.558105,109.199104 
   C589.201538,113.221031 584.645935,115.803154 580.522400,118.891708 
   C574.797913,123.179359 569.191345,127.448463 564.518311,133.062622 
   C560.094482,138.377380 554.562439,142.769745 548.960876,148.097488 
   C554.651733,153.367462 560.041870,158.483978 565.566284,163.451080 
   C581.437256,177.720779 594.925598,193.856461 604.696289,212.942825 
   C609.601257,222.524368 613.132507,223.926010 623.088013,219.917633 
   C642.546509,212.083115 661.950745,204.113693 681.412170,196.286560 
   C685.406921,194.679916 689.444214,193.076874 693.989868,194.106934 
   C698.925903,195.225433 701.254028,198.586777 702.049072,203.178864 
   C702.782715,207.416107 700.870850,210.651871 697.372131,212.913345 
   C695.562012,214.083405 693.633972,215.131073 691.643066,215.952393 
   C673.175598,223.570755 654.729004,231.243423 636.181213,238.662415 
   C623.557617,243.711746 621.204956,248.933838 627.093811,261.416595 
   C634.342529,276.782074 642.070984,291.923065 649.206238,307.339661 
   C656.714111,323.561371 662.467041,340.316681 663.482971,358.434967 
   C664.024170,368.087463 666.822388,369.849243 676.441650,367.683685 
   C696.381958,363.194611 716.317261,358.683289 736.627319,354.090546 
   C737.000000,361.354248 737.000000,368.708496 736.600159,376.611816 
   C721.670837,380.915771 706.692993,381.918091 691.956970,384.395172 
   C673.430176,387.509491 664.943909,395.876099 662.294189,414.327118 
   C659.995239,430.335785 661.470642,446.563751 660.460266,462.675293 
   C660.060913,469.043457 659.433167,475.112762 657.116577,481.169159 
   C649.322266,501.545898 654.607239,513.015259 674.894653,520.784363 
   C675.977905,521.199219 677.096619,521.534485 678.218445,521.833191 
   C685.278748,523.713501 692.455627,525.237305 699.379272,527.527893 
   C707.245850,530.130432 709.890503,535.292175 707.597229,541.969849 
   C704.863892,549.928833 699.950806,552.373596 691.603271,549.883484 
   C688.071594,548.830017 684.810242,547.174805 681.644775,545.302246 
   C676.175476,542.066772 670.445618,539.424438 664.257751,537.856384 
   C655.344543,535.597595 647.672058,538.791138 642.933533,546.717163 
   C639.826111,551.914795 637.765381,557.543945 636.396423,563.394775 
   C629.939209,590.993103 618.228455,616.176392 601.768555,639.192505 
   C597.798828,644.743469 593.498108,650.072571 589.771851,655.779297 
   C583.828430,664.881714 585.361694,671.409668 594.378418,677.298889 
   C595.352234,677.935059 596.356628,678.555481 597.417786,679.021912 
   C614.008667,686.313049 629.864685,695.266846 647.231812,700.811279 
   C654.831299,703.237427 656.992798,707.926392 654.293213,715.039795 
   C651.376038,722.726501 646.357300,725.117310 638.994202,722.194397 
   C633.273376,719.923401 627.693604,717.272278 621.901672,715.209656 
   C608.194946,710.328491 595.140625,704.477295 583.431152,695.490173 
   C571.010315,685.957092 559.407288,686.782227 547.750854,697.285828 
   C537.606079,706.427307 526.798767,714.219421 513.353027,717.698853 
   C513.159241,717.749023 513.077454,718.231934 512.927246,718.546570 
   C513.671997,720.315735 515.277405,721.302368 516.639587,722.491150 
   C543.028748,745.522339 564.682434,772.280212 580.608276,803.571106 
   C582.819214,807.915039 583.726685,812.296021 582.000000,817.000000 
   C575.645569,817.000000 569.291199,817.000000 562.354248,816.659485 
   C556.384949,803.837463 548.787659,792.733337 540.378662,782.150269 
   C525.998352,764.052002 509.246613,747.892639 496.471802,728.482422 
   C494.960846,726.186707 493.123383,726.464417 490.820923,727.126404 
   C480.285217,730.155518 469.641785,732.780090 458.777313,734.337769 
   C435.194458,737.718933 411.542389,739.543701 387.710114,737.396851 
   C381.753693,736.860168 375.765869,736.486511 369.788086,736.418213 
   C361.729492,736.326172 357.324585,739.337341 355.775635,745.745544 
   C354.832245,749.648438 355.064056,753.675354 355.096283,757.668396 
   C355.256012,777.445801 356.628479,797.225525 355.000000,817.000000 
   C348.978851,817.000000 342.957703,817.000000 336.468262,817.000000 
   C333.539520,808.703552 334.274384,800.093750 334.364044,791.709045 
   C334.529663,776.221252 335.031738,760.728699 334.631256,745.243469 
   C334.370697,735.167480 329.371124,729.317200 318.541412,726.300720 
   C301.026276,721.422180 283.886108,715.663391 267.511719,707.639465 
   C244.160873,696.196838 222.888763,681.748718 203.502472,664.463501 
   C201.140244,662.357300 198.795731,660.213501 196.282227,658.298157 
   C190.015198,653.522583 184.632645,654.147339 179.943466,660.499695 
   C167.539230,677.303528 156.951691,695.209473 148.163208,714.160278 
   C145.783875,719.290955 143.836334,724.625122 141.379684,729.715881 
   C138.152084,736.404358 133.586990,737.783142 126.518829,734.587097 
   C120.010727,731.644348 118.281517,727.176147 121.034225,720.345398 
   C132.240891,692.536438 146.404465,666.429932 165.241852,642.964905 
   C171.341232,635.367065 171.389496,631.205688 165.627716,623.183838 
   C143.625671,592.551575 127.351715,559.255127 118.273689,522.543579 
   C111.260544,494.182495 109.241684,465.359131 111.050728,436.326355 
   C113.447296,397.864441 123.048973,360.917023 135.987274,324.756195 
   C137.047577,321.792816 137.896225,318.710785 138.438446,315.613037 
   C140.035507,306.488831 137.060028,301.346161 128.290237,298.191284 
   C117.584671,294.340057 106.441498,292.443024 95.155418,291.377167 
   C87.372513,290.642181 79.565247,290.165924 71.781654,289.437408 
   C65.918320,288.888672 60.168213,290.134857 54.358742,290.262939 
   C46.727573,290.431213 43.132530,287.233643 42.762524,280.308868 
   C42.342987,272.457153 46.392181,266.633057 53.511364,266.830231 
   C79.694725,267.555389 106.190941,265.956390 131.362701,275.709137 
   C134.930283,277.091400 138.494400,278.538055 142.165375,279.586456 
   C149.885666,281.791321 154.491028,280.325165 158.886551,273.515106 
   C164.301529,265.125519 169.000198,256.276398 174.325531,247.825668 
   C192.329483,219.255356 213.910690,193.871109 241.143768,173.588272 
   C242.209152,172.794785 243.187943,171.875595 244.152328,170.957474 
   C251.596191,163.870590 251.851456,157.627563 244.752228,150.281570 
   C236.131195,141.360886 226.041611,134.273270 215.697372,127.530457 
   C207.297485,122.055061 198.250595,117.798691 189.276764,113.390152 
   C181.998489,109.814575 180.058578,105.585762 182.589142,99.553719 
   C185.534088,92.533928 190.607010,89.834473 197.875580,92.955093 
   C221.409256,103.058823 244.164429,114.392212 260.423981,135.394104 
   C268.814972,146.232468 275.957764,147.898590 287.773315,141.295456 
   C307.520935,130.259506 328.532471,122.460175 349.914856,115.439163 
   C354.802277,113.834351 359.627258,112.067970 364.118896,109.382927 
   C371.452301,104.999077 373.351074,98.507683 372.232239,90.596428 
   C368.667114,65.388062 361.694641,40.863815 357.223297,15.837641 
   C356.120422,9.664800 357.683105,4.621292 363.742798,1.218271 
   C367.030609,1.000000 370.061188,1.000000 373.545898,1.000000 
M285.004761,168.537460 
   C257.305511,186.799332 231.826050,207.564041 211.740891,234.279907 
   C196.044205,255.158508 184.549164,278.493622 172.760468,301.660217 
   C145.704681,354.829071 130.093277,410.537689 134.270370,470.828644 
   C135.781174,492.635162 138.989441,514.100952 145.365005,535.032227 
   C161.064453,586.574219 190.329178,628.655273 233.561432,660.888062 
   C282.649231,697.486511 338.709930,714.454956 399.050598,718.530273 
   C437.648499,721.137024 474.350494,713.131042 508.364105,694.663025 
   C567.495972,662.556702 606.237610,614.656250 619.999817,547.899902 
   C622.836426,534.140381 621.873840,532.270691 609.000000,526.594177 
   C605.333069,524.977295 602.070251,523.083679 602.482056,518.279968 
   C602.913940,513.240845 605.349060,509.944824 610.439026,508.718048 
   C613.379700,508.009216 616.327942,507.733459 619.337402,507.637054 
   C626.938538,507.393646 631.749939,503.828278 633.332520,496.534241 
   C639.509705,468.064484 643.760132,439.320587 644.634766,410.155884 
   C645.059387,395.996307 644.307739,381.876862 642.736023,367.792023 
   C640.679565,349.362640 637.442078,331.240265 629.136353,314.426697 
   C616.008240,287.851227 602.933716,261.247772 589.568909,234.791306 
   C582.577393,220.951141 574.390381,207.808456 565.140564,195.311554 
   C533.806030,152.977295 491.718506,131.954010 439.228851,131.356018 
   C421.230194,131.150955 403.294891,132.101898 385.406891,134.172745 
   C349.682861,138.308441 316.136261,148.762573 285.004761,168.537460 
z"/>
<path fill="#000000" opacity="1.000000" stroke="none" 
   d="
M1.000000,507.449982 
   C11.140101,494.383209 21.983208,482.493439 35.235504,472.988434 
   C50.596806,461.970764 67.483681,454.375824 85.868240,450.119385 
   C90.785736,448.980896 95.658600,449.176636 99.021103,453.682617 
   C104.077271,460.458160 101.440079,467.763031 92.921951,470.391785 
   C75.071281,475.900635 58.617764,484.087341 43.911819,495.638947 
   C35.912922,501.922180 28.404165,508.737335 21.915709,516.638794 
   C15.469826,524.488403 7.784625,524.367981 1.230030,516.249146 
   C1.000000,513.299988 1.000000,510.599976 1.000000,507.449982 
z"/>
<path fill="#000000" opacity="1.000000" stroke="none" 
   d="
M456.505920,409.385040 
   C472.764618,412.390198 488.571625,415.442596 504.657288,416.982300 
   C513.026672,417.783417 516.179871,422.295715 514.887268,429.201447 
   C513.217468,438.122528 508.727386,441.322571 500.169067,439.781738 
   C462.238037,432.952759 424.268738,426.379852 387.210236,415.420898 
   C330.646332,398.693817 276.609100,375.990784 224.842239,347.788361 
   C221.627975,346.037292 218.268280,344.550812 215.072250,342.769043 
   C208.260162,338.971375 206.331360,333.381775 209.455887,326.894440 
   C211.984573,321.644226 218.543106,319.670837 225.107544,322.811676 
   C234.263229,327.192291 243.226791,331.979218 252.226318,336.680786 
   C316.790863,370.410736 384.808807,394.432709 456.505920,409.385040 
z"/>
<path id="eye1" fill="#000000" opacity="1.000000" stroke="none" 
	d="
M501.001587,308.484955 
	C495.574890,304.744995 493.782227,299.873260 495.592590,294.633728 
	C497.048096,290.421234 501.336212,287.771698 506.167877,288.099518 
	C512.178833,288.507294 515.317932,291.759003 515.338135,297.598663 
	C515.361755,304.421143 511.633911,309.019409 505.753784,309.233002 
	C504.302521,309.285706 502.833679,308.854736 501.001587,308.484955 
z"/>
<path id="eye2" fill="#000000" opacity="1.000000" stroke="none" 
	d="
M316.229858,221.128357 
	C313.748260,221.304123 311.589539,221.564926 309.469971,221.378967 
	C304.677979,220.958572 302.005707,217.840576 300.991089,213.490845 
	C299.935150,208.964127 301.735870,205.295227 305.740479,202.933151 
	C310.781677,199.959641 317.110992,200.838272 319.684814,204.707306 
	C323.136719,209.896255 321.803650,216.874649 316.229858,221.128357 
z"/>
</svg>`;

    // Load the SVG from the string
    project.importSVG(svgString, function (loadedSvg) {
        // Scale the SVG

        svg = loadedSvg
        var canvasWidth = paper.view.bounds.width;
        var canvasHeight = paper.view.bounds.height;
        var svgBounds = svg.bounds;

        // Calculate scale ratio to fit SVG within canvas
        var scaleRatio = Math.min(canvasWidth / svgBounds.width, canvasHeight / svgBounds.height) * .9; // 0.8 for some padding
        svg.scale(scaleRatio);

        // Center the SVG
        svg.position = paper.view.center;

        var eye1 = svg.children.eye1;
        var eye2 = svg.children.eye2;

        function blink() {
            var eyesOpen = true;

            return function () {
                [eye1, eye2].forEach(eye => {
                    if (eye) {
                        eye.visible = eyesOpen;
                    }
                });

                eyesOpen = !eyesOpen;
            }
        }

        // Create the blink function and set interval
        var startBlinking = blink();
        setInterval(startBlinking, 500); // Adjust the interval as needed

        // Randomize the animation type
        var animations = ['spinRight', 'spinLeft', 'bounce'];
        animationType = animations[Math.floor(Math.random() * animations.length)];


        // Set up the onFrame event handler
        paper.view.onFrame = onFrame;
    });

});

